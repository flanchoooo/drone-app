The service should allow:
1. registering a drone ---> validate the enums !!!!;
2. loading a drone with medication items;
3. checking loaded medication items for a given drone;
4. checking available drones for loading;
5. check drone battery level for a given drone;
6. Feel free to make assumptions for the design approach.
Requirements
1. While implementing your solution please take care of the following requirements:
Drones-v1.md 2/22/2023
2 / 2
Functional requirements
1. There is no need for UI;
2. Prevent the drone from being loaded with more weight that it can carry;
3. Prevent the drone from being in LOADING state if the battery level is below 25%;
4. Introduce a periodic task to check drones battery levels and create history/audit event log for this.
Non-functional requirements
1. Input/output data must be in JSON format;
2. Your project must be buildable and runnable;
3. Your project must have a README file with build/run/test instructions (use DB that can be run locally,
e.g. in-memory, via container);
4. Any data required by the application to run (e.g. reference tables, dummy data) must be preloaded in
the database.
5. JUnit tests are optional but advisable (if you have time);
6. Advice: Show us how you work through your commit history.